// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class cfoPayCreated extends ethereum.Event {
  get params(): cfoPayCreated__Params {
    return new cfoPayCreated__Params(this);
  }
}

export class cfoPayCreated__Params {
  _event: cfoPayCreated;

  constructor(event: cfoPayCreated) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get cfoPay(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class cfoPayFactory__getcfoPayContractByTokenResult {
  value0: Address;
  value1: boolean;

  constructor(value0: Address, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getPredictedAddress(): Address {
    return this.value0;
  }

  getIsDeployed(): boolean {
    return this.value1;
  }
}

export class cfoPayFactory extends ethereum.SmartContract {
  static bind(address: Address): cfoPayFactory {
    return new cfoPayFactory("cfoPayFactory", address);
  }

  createcfoPayContract(_token: Address): Address {
    let result = super.call(
      "createcfoPayContract",
      "createcfoPayContract(address):(address)",
      [ethereum.Value.fromAddress(_token)]
    );

    return result[0].toAddress();
  }

  try_createcfoPayContract(_token: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createcfoPayContract",
      "createcfoPayContract(address):(address)",
      [ethereum.Value.fromAddress(_token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getcfoPayContractByIndex(param0: BigInt): Address {
    let result = super.call(
      "getcfoPayContractByIndex",
      "getcfoPayContractByIndex(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_getcfoPayContractByIndex(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getcfoPayContractByIndex",
      "getcfoPayContractByIndex(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getcfoPayContractByToken(
    _token: Address
  ): cfoPayFactory__getcfoPayContractByTokenResult {
    let result = super.call(
      "getcfoPayContractByToken",
      "getcfoPayContractByToken(address):(address,bool)",
      [ethereum.Value.fromAddress(_token)]
    );

    return new cfoPayFactory__getcfoPayContractByTokenResult(
      result[0].toAddress(),
      result[1].toBoolean()
    );
  }

  try_getcfoPayContractByToken(
    _token: Address
  ): ethereum.CallResult<cfoPayFactory__getcfoPayContractByTokenResult> {
    let result = super.tryCall(
      "getcfoPayContractByToken",
      "getcfoPayContractByToken(address):(address,bool)",
      [ethereum.Value.fromAddress(_token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new cfoPayFactory__getcfoPayContractByTokenResult(
        value[0].toAddress(),
        value[1].toBoolean()
      )
    );
  }

  getcfoPayContractCount(): BigInt {
    let result = super.call(
      "getcfoPayContractCount",
      "getcfoPayContractCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getcfoPayContractCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getcfoPayContractCount",
      "getcfoPayContractCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  parameter(): Address {
    let result = super.call("parameter", "parameter():(address)", []);

    return result[0].toAddress();
  }

  try_parameter(): ethereum.CallResult<Address> {
    let result = super.tryCall("parameter", "parameter():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreatecfoPayContractCall extends ethereum.Call {
  get inputs(): CreatecfoPayContractCall__Inputs {
    return new CreatecfoPayContractCall__Inputs(this);
  }

  get outputs(): CreatecfoPayContractCall__Outputs {
    return new CreatecfoPayContractCall__Outputs(this);
  }
}

export class CreatecfoPayContractCall__Inputs {
  _call: CreatecfoPayContractCall;

  constructor(call: CreatecfoPayContractCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CreatecfoPayContractCall__Outputs {
  _call: CreatecfoPayContractCall;

  constructor(call: CreatecfoPayContractCall) {
    this._call = call;
  }

  get cfoPayContract(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
